apiVersion: v1
kind: ConfigMap
metadata:
  name: zbt-config
data:
  zbt_nginx.conf: |
    upstream zbt_dforcepro_com {
      server beta-zbtapi:9080;
    }
    upstream mongo_com {
      server beta-mongodb:57001;
    }

    server {
      listen        80;
      server_name   api.zbt.dforcepro.com;
      access_log    /var/log/nginx/access_api_zbt.log main;

      location = / {

        proxy_pass   http://mongo_com;

      }

      location / {
        proxy_pass   http://zbt_dforcepro_com;
        proxy_set_header X-Real-IP $remote_addr;

        # reference https://gist.github.com/Stanback/7145487
        set $cors 'true';

        if ($cors = 'true') {
            add_header 'Access-Control-Allow-Origin' "$http_origin" always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With,token,system,X-DEVICE-ID' always;
            # required to be able to read Authorization header in frontend
            #add_header 'Access-Control-Expose-Headers' 'Authorization' always;
        }

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' "$http_origin" always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With,token,system,X-DEVICE-ID' always;
            # Tell client that this pre-flight info is valid for 20 days
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
      }
      # location ^~ /.well-known {
      #   proxy_pass http://letsencrypt;
      # }
    }

    server {
      listen      443           ssl http2;
      listen [::]:443           ssl http2;
      server_name               api.zbt.dforcepro.com;

      ssl                       on;

      add_header                Strict-Transport-Security "max-age=31536000" always;

      ssl_session_cache         shared:SSL:20m;
      ssl_session_timeout       10m;

      ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
      ssl_prefer_server_ciphers on;
      ssl_ciphers               "ECDH+AESGCM:ECDH+AES256:ECDH+AES128:!ADH:!AECDH:!MD5;";

      ssl_stapling              on;
      ssl_stapling_verify       on;
      resolver                  8.8.8.8 8.8.4.4;

      ssl_certificate           /etc/letsencrypt/live/api.zbt.dforcepro.com/tls.crt;
      ssl_certificate_key       /etc/letsencrypt/live/api.zbt.dforcepro.com/tls.key;

      access_log                /var/log/nginx/access_cert.log;
      error_log                 /var/log/nginx/access_cert.eror;

      # other configs
      location / {
        proxy_pass   http://zbt_dforcepro_com;
        proxy_set_header X-Real-IP $remote_addr;

        # reference https://gist.github.com/Stanback/7145487
        set $cors 'true';

        if ($cors = 'true') {
            add_header 'Access-Control-Allow-Origin' "$http_origin" always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With,token,system,X-DEVICE-ID' always;
            # required to be able to read Authorization header in frontend
            #add_header 'Access-Control-Expose-Headers' 'Authorization' always;
        }

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' "$http_origin" always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With,token,system,X-DEVICE-ID' always;
            # Tell client that this pre-flight info is valid for 20 days
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
      }
    }

    server {
      listen      443           ssl http2;
      listen [::]:443           ssl http2;
      server_name               www.zbt.dforcepro.com;

      ssl                       on;

      add_header                Strict-Transport-Security "max-age=31536000" always;

      ssl_session_cache         shared:SSL:20m;
      ssl_session_timeout       10m;

      ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
      ssl_prefer_server_ciphers on;
      ssl_ciphers               "ECDH+AESGCM:ECDH+AES256:ECDH+AES128:!ADH:!AECDH:!MD5;";

      ssl_stapling              on;
      ssl_stapling_verify       on;
      resolver                  8.8.8.8 8.8.4.4;

      ssl_certificate           /etc/letsencrypt/live/api.zbt.dforcepro.com/tls.crt;
      ssl_certificate_key       /etc/letsencrypt/live/api.zbt.dforcepro.com/tls.key;

      access_log                /var/log/nginx/access_web.log;
      error_log                 /var/log/nginx/access_web.eror;

      root /html/zbt;
      index index.html;

      # CSS and Javascript
      location ~* \.(?:css|js)$ {
        expires 1y;
        access_log off;
        add_header Cache-Control "public";
      }
    }
